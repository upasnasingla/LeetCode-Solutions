class Solution {
    public ListNode reverse(ListNode head){
         ListNode prev = null;
         ListNode curr = head;
         while (curr != null) {
         ListNode next = curr.next;
        curr.next = prev;
        prev = curr;
        curr = next;
   }
   return prev;
}

    
    public boolean isPalindrome(ListNode head) {
        if(head.next==null||head==null){
            return true;
        }
        int size=0;
        ListNode temp=head;
        while(temp!=null){
            size++;
            temp=temp.next;
        }
        int index=size/2;
        if(size%2!=0){
            index=index+1;
        } 
        ListNode second=head;
        int pos=1;
        while(pos<index){
            pos++;
            second=second.next;
        }
        

        ListNode secondhalf=reverse(second.next);
        ListNode firsthalf=head;
        while(secondhalf!=null){
            if(secondhalf.val!=firsthalf.val){
                return false;
            }
            secondhalf=secondhalf.next;
            firsthalf=firsthalf.next;
        }
        return true;

    }

}
